import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Map;
import java.util.Set;
import java.util.Scanner;
import java.util.TreeMap;
--------------------------------------------------------------------------
Scanner sc = new Scanner(System.in);
int n = sc.nextInt(); next(); nextLine(); nextDouble();
--------------------------------------------------------------------------
String str = "";
str.length()
str.charAt(index)
str.indexOf('a') // (char) as parameter
str.lastIndexOf('l')
str.substring(2,6) // from [2] to [5] (start, endIndex)
s.replace('a', 'A'); //(having str,toString)
str.toUpperCase(); str.toLowerCase()

str3=str1.concat(str2);
str2.equals(str4)
str2.equalsIgnoreCase(str4)
int res=str1.compareTo(str2);
	if(res==0)
		System.out.println(str1 + "and  "+str2 +" are equal");
	else if(res>0)
		System.out.println(str1 + "is greater than  "+str2 );
	else
		System.out.println(str1 + "is lesser than  "+str2);

char ch[]= {'a','b','c','d','e'};
String s=new String(ch);
char c[]=str.toCharArray();

String str[];
string[]=str.split(",");


StringBuffer sb1=new StringBuffer(string);
sb1.append(sb2);
sb.reverse()
sb.toString();
sb2.deleteCharAt(index);
System.out.println(sb1);
sb1.delete(2, 5); //from [2] to [4] (start, endIndex)
sb3.insert(3, "*"); // (index,'char'/"string")
sb3.setCharAt(3, '#'); // replace char at
---------------------------------------------------------------------------
Pattern

str.matches(".*[0-9]{1,}.*") // *0 +1
String pattern="[a-zA-Z]{3}[-]{1}[0-9]{3}[-]{1}[0-9]{4}";
	str.matches(pattern);
---------------------------------------------------------------------------
Character wrapper

Character.toUpperCase('a');
Character.toLowerCase('A');
Character.isDigit('2'); //true
Character.isLetter('a'); //true
Character.isLetterOrDigit('$') //false
Character.isAlphabetic(c)
Character.isLowerCase('A') //false

--------------------------------------------------------------------------
Integer wrapper 

int res = obj1.compareTo(obj3); // same as string
Integer.max(10, 20) // 20 .min
int num = Integer.parseInt(s); // s="123"
Integer result = Integer.valueOf(s);
Integer.toBinaryString(2) // 10
Integer.toOctalString(2) // 2
Integer.toHexString(2) // 2

--------------------------------------------------------------------------
ooc class //user defined getters n putters
class.getData();
class.putData();
----------------------------------------------------------------------------
int array[] = new int[5];

arrays.length;
arrays.sort(b);
System.out.println("After sorting=" + Arrays.toString(b));

for-each (enhanced for loop)
 for(datatype variable:arrayname)
 {
 System.out.println(var);
 }
----------------------------------------------------------------------------
ArrayList<String> list=new ArrayList<String>();
list.add(); list.add(new Integer(10)); list.add(20); list.add("one");
list.size() //length size
list.get(index) //get element
list.set(3, "modified element"); //set element
list.contains(element)
list1.addAll(list); 
list1.remove(index); //remove element from index
list1.clear(); //clearAll

List<Product> productList = new ArrayList<>();

Collections.sort(productList);
----------------------------------------------------------------------------
HashMap<String,Float> input=new HashMap<>();
for(int i=1;i<=n;i++)
	input.put(key, value);	
-----------------------------------------------------------------------------
Map<String, String> map = new HashMap<>();
map.put("P", "null");
map.size()
"Value of C="+map.get("C")
map.containsKey("B") // boolean
map.containsValue("Delhi"); // boolean
System.out.println("Map elements =" + map);

for(Entry<String,Float> entry:inputMap.entrySet())
	key=entry.getKey();
	value=entry.getValue();	
------------------------------------------------------------------------------
Set<String> set = new HashSet<>();
//same as arraylist
set.add();
set.contains(element)
System.out.println(set);

System.out.println("Traversing set elements with for-each");
for(String s:hashSet)
{
	System.out.print(s+" ");
}
System.out.println();
System.out.println("Traversing set elements with iterator");
Iterator<String> itr=hashSet.iterator();
while(itr.hasNext())
{
	System.out.println(itr.next());
}
------------------------------------------------------------------------------
Iterator<String> itr=map.keySet().iterator();
System.out.println("Traversing map using iterator");
while(itr.hasNext())
{
	String key=itr.next();
	String value=map.get(key);
	System.out.println("Key :"+key+" Value :"+value);
}
System.out.println("Traversing map using for-each loop");
for(String key:set)
{
	 String s=key;
   	 String value=map.get(s);
   	 System.out.print(s+" : "+value+" ");
}
for(String key:map.keySet())
{
   	   String s=key;
    	   String value=map.get(s);
    	   System.out.print(s+" : "+value+" ");
}
------------------------------------------------------------------------------
MISC
Calender
Simple date formate
		